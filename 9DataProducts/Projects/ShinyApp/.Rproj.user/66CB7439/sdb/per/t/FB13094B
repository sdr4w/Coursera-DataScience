{
    "contents" : "# This is the server logic for a Shiny web application.\n\nlibrary(shiny);\nlibrary(sqldf);\nlibrary(ggplot2);\n\ndf <- read.table(file=\"userlogin.dat\");\nlevels(df$userBrowser)  <- c(levels(df$userBrowser), \"Unknown\");\nlevels(df$userPlatform) <- c(levels(df$userPlatform),\"Unknown\");\ndf$timestamp                         <- as.character(df$timestamp);\ndf$date                              <- as.character(strsplit(df$timestamp,\" \")[[1]][1]);\ndf$time                              <- strsplit(df$timestamp,\" \")[[1]][2];\ndf$userBrowser[df$userBrowser==\"\"]   <- \"Unknown\";\ndf$userPlatform[df$userPlatform==\"\"] <- \"Unknown\";\n\nshinyServer(function(input, output) {\n\n  filter <- reactive({ df$timestamp >= input$dateRng[1] & df$timestamp <= input$dateRng[2] })\n  output$title <- renderPrint({ paste(\"<center><b>\",input$dateRng[1],\"to\",input$dateRng[2],\"</b></center>\",sep=\" \") })\n  output$table <- renderTable({\n      tmp <- df[filter(), ];\n      if(dim(tmp)[1] != 0){\n          head(tmp[,2:6]);\n      }\n  })\n  output$distPlot <- renderPlot({\n      tmp   <- switch(input$which, \"Login\"=as.Date(df[filter(),1]), \"Browser\"=df[filter(),2],          \"Platform\"=df[filter(),3]);\n      title <- switch(input$which, \"Login\"=\"Histogram of Logins\",   \"Browser\"=\"Histogram of Browsers\", \"Platform\"=\"Histogram of OS Platform\");\n      xname <- switch(input$which, \"Login\"=\"Timestamp\",             \"Browser\"=\"Type of Browser Used\",  \"Platform\"=\"Type of OS Platform\");\n      yname <- switch(input$which, \"Login\"=\"Number of Logins\",      \"Browser\"=\"Percentage\",            \"Platform\"=\"Percentage\");\n      fillc <- switch(input$which, \"Login\"=\"darkgray\",              \"Browser\"=\"lightblue\",             \"Platform\"=\"darkgray\");\n      sub   <- paste(\"From\",input$dateRng[1],\"to\",input$dateRng[2],sep=\" \");\n      if( input$which == \"Login\" ) {\n          bins <- seq(min(tmp), max(tmp), length.out=input$bins+1);\n          hist(tmp, col=fillc, border='white', breaks=bins, main=title, sub=sub, xlab=xname, ylab=yname);\n          box(col='red');\n      } else {\n          ggp <- ggplot(data.frame(tmp),aes(x=tmp)) + ggtitle(bquote(atop(.(title),atop(italic(.(sub)),\"\")))) + xlab(xname) + ylab(yname) + theme(panel.background=element_rect(colour=\"red\"));\n          ggp + geom_histogram(fill=fillc,aes(y=..count../sum(..count..)));\n      }\n  })\n\n})\n\n",
    "created" : 1418869961288.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4158250411",
    "id" : "FB13094B",
    "lastKnownWriteTime" : 1419019296,
    "path" : "J:/Documents/Projects/DataScience/9DataProducts/Projects/ShinyApp/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}