runApp()
library(shiny)
runApp()
runApp(display.mode="showcase")
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1));
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1));
manipulate(myPlot(s), slider = x(0, 2, step = 0.1));
manipulate(myPlot, s = slider(0, 2, step = 0.1));
manipulate(myPlot(s), s = slider(0, 2, step = 0.1));
install.packages(c("googleVis", "googlePublicData", "rCharts"))
install.packages("rjson")
library(shiny)
runApp()
runApp();
install.packages(c("RColorBrewer", "RCurl", "reshape2", "shiny"))
library(shiny)
runApp()
install.packages(c('ggplot2'))
install.packages(c("ggplot2"))
library(shiny)
runApp()
library(devtools);
install_github("slidify","ramnathv");
install_github("slidifyLibraries","ramnathv");
library(slidify);
author("first_deck")
slidify("index.Rmd")
setwd("first_deck")
setwd("/first_deck")
setwd("\first_deck")
wd("first_deck")
dir
dir()
slidify("index.Rmd")
library(slidifyLibraries);
slidify("index.Rmd")
library(knitr);
browseURL('index.html')
slidify('index.Rmd')
install_github("slidifyLibraries","ramnathv");
install_github("slidifyLibraries","ramnathv/slidifyLibraries");
slidify('index.Rmd')
library("slidify", lib.loc="J:/PortableApps/R-Portable/App/R-3.1.2/library")
library("slidifyLibraries", lib.loc="J:/PortableApps/R-Portable/App/R-3.1.2/library")
install.packages(c("digest", "plotmo"))
library("shiny", lib.loc="J:/PortableApps/R-Portable/App/R-3.1.2/library")
library("knitr", lib.loc="J:/PortableApps/R-Portable/App/R-3.1.2/library")
slidify(inputFile = 'index.Rmd')
browseURL(url = 'index.html')
shiny::runApp()
library("slidify", lib.loc="J:/PortableApps/R-Portable/App/R-3.1.2/library")
library("shinyapps", lib.loc="J:/PortableApps/R-Portable/App/R-3.1.2/library")
library("rstudio", lib.loc="J:/PortableApps/R-Portable/App/R-3.1.2/library")
shiny::runApp()
library("devtools", lib.loc="J:/PortableApps/R-Portable/App/R-3.1.2/library")
shiny::runApp()
install.packages("Rtools")
install.packages("Rtools",repos = "http://cran.r-project.org/bin/windows/Rtools/")
shiny::runApp()
library(RODBC);
ch <- odbcConnect("MySQL CFBLNet");
tmp <- sqlQuery(ch,"SELECT timestamp,action,actionType FROM _log WHERE actionSubType='ACCESS' LIMIT 0,10");
odbcClose(ch);
ch <- odbcConnect("MySQL CFBLNet");
tmp <- sqlQuery(ch,"SELECT timestamp,action,actionType FROM _log WHERE actionSubType='LOGIN' LIMIT 0,10");
odbcClose(ch);
ch <- odbcConnect("MySQL CFBLNet");
tmp <- sqlQuery(ch,"SELECT timestamp,action,actionType FROM _log WHERE actionSubType='LOGIN'");
odbcClose(ch);
as.data.frame(tmp);
shiny::runApp()
install.packages(c("earth", "httr", "rpart.plot"))
shiny::runApp()
library(RODBC);
ch <- odbcConnect("MySQL CFBLNet");
tmp <- sqlQuery(ch,"SELECT timestamp,action,actionType FROM _log WHERE actionSubType='LOGIN'");
odbcClose(ch);
str(tmp)
tmp$timestamp
as.Date(tmp$timestamp)
tmp$timestamp <- as.Date(tmp$timestamp)
str(tmp)
shiny::runApp()
library(RODBC);
library(ggplot2);
ch <- odbcConnect("MySQL CFBLNet");
tmp <- sqlQuery(ch,"SELECT timestamp,action,actionType FROM _log WHERE actionSubType='LOGIN'");
odbcClose(ch);
pie <- ggplot(data, aes(x = factor(1), fill = factor(x$userBrowser))) + geom_bar(width = 1);
ch <- odbcConnect("MySQL CFBLNet");
tmp <- sqlQuery(ch,"SELECT timestamp,userBrowser,actionType FROM _log WHERE actionSubType='LOGIN'");
odbcClose(ch);
tmp$timestamp <- as.character(tmp$timestamp);
pie <- ggplot(data, aes(x = factor(1), fill = factor(x$userBrowser))) + geom_bar(width = 1);
pie <- ggplot(tmp, aes(x = factor(1), fill = factor(tmp$userBrowser))) + geom_bar(width = 1);
pie + coord_polar(theta = "y");
install.packages("labeling")
library("labeling", lib.loc="J:/PortableApps/R-Portable/App/R-3.1.2/library")
pie + coord_polar(theta = "y");
shiny::runApp()
tmp$timestamp <- as.character(tmp$timestamp);
pie <- ggplot(tmp, aes(x=factor(1), fill=factor(tmp$userBrowser))) + geom_bar(width = 1);
pie + coord_polar(theta = "y");
shiny::runApp()
View(tmp)
shiny::runApp()
summary(tmp)
library(RODBC);
library(ggplot2);
ch <- odbcConnect("MySQL CFBLNet");
tmp <- sqlQuery(ch,"SELECT timestamp,userBrowser,userPlatform,actionType FROM _log WHERE actionSubType='LOGIN'");
odbcClose(ch);
tmp$timestamp <- as.character(tmp$timestamp);
summary(tmp)
tmp$timestamp <- as.Date(tmp$timestamp);
summary(tmp)
summary(subset(tmp,timestamp>"2014-01-01"))
summary(subset(tmp,timestamp>="2014-06-01" && timestamp<="2014-12-31"))
summary(subset(tmp,timestamp>="2014-06-01" || timestamp="2014-12-31"))
summary(subset(tmp,timestamp>="2014-06-01" || timestamp<"2014-12-31"))
shiny::runApp()
summary(tmp[,timestamp>="2014-06-01" || timestamp<"2014-12-31"])
tmp$timestamp>="2014-06-01" || tmp$timestamp<"2014-12-31"
tmp$timestamp>="2014-06-01"
filt <- tmp$timestamp>="2014-06-01" || tmp$timestamp<="2014-12-31"
filt <- tmp$timestamp>="2014-06-01"
tmp[filt]
tmp[,filt]
summary(subset(tmp,timestamp>="2014-06-01" || timestamp<"2014-12-31"))
as.matrix(subset(tmp,timestamp>="2014-06-01" || timestamp<"2014-12-31"))
shiny::runApp()
str(subset(tmp,timestamp>="2014-06-01" || timestamp<"2014-12-31"))
str(subset(tmp,timestamp>="2014-06-01" || timestamp<"2014-12-31",,select=c(timestamp)))
shiny::runApp()
install.packages("sqldf")
summary(sqldf("SELECT timestamp FROM tmp WHERE timestamp>='2014-06-01' AND timestamp<='2014-12-31'"))
library(sqldf);
summary(sqldf("SELECT timestamp FROM tmp WHERE timestamp>='2014-06-01' AND timestamp<='2014-12-31'"))
summary(sqldf("SELECT timestamp FROM tmp WHERE timestamp>'2014-06-01' AND timestamp<'2014-12-31'"))
sqldf("SELECT timestamp FROM tmp WHERE timestamp>'2014-06-01' AND timestamp<'2014-12-31'")
sqldf("SELECT timestamp FROM tmp")
sqldf("SELECT timestamp FROM tmp WHERE timestamp>'2014-06-01'")
sqldf("SELECT timestamp FROM tmp WHERE timestamp > '2014-06-01'")
str(tmp)
sqldf("SELECT timestamp FROM tmp WHERE timestamp > 2014-06-01")
sqldf("SELECT timestamp FROM tmp WHERE timestamp>2014-06-01 AND timestamp<2014-12-31")
summary(sqldf("SELECT timestamp FROM tmp WHERE timestamp >= 2014-06-01 AND timestamp <= 2014-12-31"))
summary(sqldf("SELECT timestamp FROM tmp WHERE timestamp >= 2014-06-01 OR timestamp <= 2014-12-31"))
str(sqldf("SELECT timestamp FROM tmp WHERE timestamp >= 2014-06-01 OR timestamp <= 2014-12-31"))
str(sqldf("SELECT timestamp FROM tmp WHERE timestamp BETWEEN 2014-06-01 AND 2014-12-31"))
str(sqldf("SELECT timestamp FROM tmp WHERE timestamp BETWEEN '2014-06-01' AND '2014-12-31'"))
str(sqldf("SELECT timestamp FROM tmp WHERE timestamp BETWEEN '2014/06/01' AND '2014/12/31'"))
str(sqldf("SELECT timestamp FROM tmp WHERE timestamp BETWEEN '2014-06-01' AND '2014-12-31'"))
summary(sqldf("SELECT timestamp FROM tmp WHERE timestamp >= 2014-06-01"))
summary(sqldf("SELECT timestamp FROM tmp WHERE timestamp < 2014-06-01"))
summary(sqldf("SELECT timestamp FROM tmp WHERE timestamp <= 2014-06-01"))
summary(sqldf("SELECT timestamp FROM tmp WHERE timestamp <= 2014-12-31"))
summary(sqldf("SELECT timestamp FROM tmp WHERE timestamp <= '2014-12-31'"))
summary(sqldf("SELECT timestamp FROM tmp WHERE timestamp <= '2014-12-31' AND timestamp >= '2014-06-01'"))
summary(sqldf("SELECT timestamp FROM tmp WHERE timestamp >= '2014-06-01' AND timestamp <= '2014-12-31'"))
summary(sqldf("SELECT timestamp FROM tmp WHERE timestamp >= '2014-06-01'"))
summary(sqldf("SELECT timestamp FROM tmp"))
summary(sqldf("SELECT timestamp FROM tmp WHERE timestamp > '2014-06-01' "))
summary(sqldf("SELECT timestamp FROM tmp WHERE timestamp < '2014-06-01' "))
shiny::runApp()
subset(tmp,timestamp>=input$dateBeg || timestamp=<input$dateEnd,select=c(timestamp))
subset(tmp,timestamp>=input$dateBeg || timestamp<=input$dateEnd,select=c(timestamp))
subset(tmp,timestamp>="2014-06-01" || timestamp<="2014-12-31",select=c(timestamp))
summary(subset(tmp,timestamp>="2014-06-01" || timestamp<="2014-12-31",select=c(timestamp)))
summary(subset(tmp,timestamp>="2014-06-01" && timestamp<="2014-12-31",select=c(timestamp)))
summary(subset(tmp,timestamp>="2014-06-01" & timestamp<="2014-12-31",select=c(timestamp)))
shiny::runApp()
summary(sqldf("SELECT timestamp FROM tmp WHERE timestamp >= '2014-06-01' AND timestamp <= '2014-12-31';"))
shiny::runApp()
?reactive
shiny::runApp()
isolate(dataset)
shiny::runApp()
library(ggplot2)
ggp <- ggplot(data.frame(tmp),aes(x=tmp))
ggp + geom_histogram(fill="lightgreen")
# proportion
ggp + geom_histogram(fill="lightblue",aes(y=..count../sum(..count..)))
ggp <- ggplot(data.frame(tmp$userBrowser),aes(x=tmp$userBrowser))
ggp + geom_histogram(fill="lightgreen")
ggp + geom_histogram(fill="lightblue",aes(y=..count../sum(..count..)))
ggp <- ggplot(data.frame(tmp$userBrowser),aes(x=tmp$userBrowser))
ggp + geom_histogram(fill="lightgreen") + geom_histogram(fill="lightblue",aes(y=..count../sum(..count..)))
ggp + geom_histogram(fill="lightblue",aes(y=..count../sum(..count..)))
ggp <- ggplot(data.frame(tmp$userBrowser),aes(x=tmp$userBrowser))
ggp + geom_histogram(fill="lightblue",aes(y=..count../sum(..count..)))
shiny::runApp()
summary(tmp[,1])
shiny::runApp()
library(RODBC);
library(sqldf);
ch <- odbcConnect("MySQL CFBLNet");
df <- sqlQuery(ch,"SELECT timestamp,userBrowser,userPlatform,actionType FROM _log WHERE actionSubType='LOGIN'");
df$timestamp <- as.character(df$timestamp);
odbcClose(ch);
write.table(df, file="userlogin.dat", append=FALSE);
df <- read.table(file="userlogin.dat");
levels(df$userBrowser)  <- c(levels(df$userBrowser), "Unknown");
levels(df$userPlatform) <- c(levels(df$userPlatform),"Unknown");
df$timestamp                         <- as.character(df$timestamp);
df$date                              <- as.Date(strsplit(df$timestamp," ")[[1]][1]);
df$time                              <- strsplit(df$timestamp," ")[[1]][2];
df$userBrowser[df$userBrowser==""]   <- "Unknown";
df$userPlatform[df$userPlatform==""] <- "Unknown";
df[,df$date >= "2014-06-01" & df$date <= "2014-07-01"]
df[df$date >= "2014-06-01" & df$date <= "2014-07-01",]
df[df$date>="2014-06-01" & df$date<="2014-07-01", ]
df[df$date>="2014-06-01", ]
data(mtcars)
mtcars[mtcars[, "mpg"]>25, ]
data(mtcars)
mtcars[mtcars[, "mpg"]>=25, ]
mtcars[mtcars$mpg>25, ]
mtcars[mtcars$mpg>25 & mtcars$mpg<30, ]
mtcars[mtcars$mpg>=25 & mtcars$mpg<=30, ]
df[df$date>="2014-06-01" & df$date<="2014-07-01", ]
df[df$date>=2014-06-01 & df$date<=2014-07-01, ]
df[df$timestamp>="2014-06-01" & df$timestamp<="2014-07-01", ]
df[df$timestamp>="2014-06-01" & df$timestamp<="2014-09-01", ]
shiny::runApp()
